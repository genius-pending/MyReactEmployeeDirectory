{"version":3,"sources":["components/search.js","components/table.js","components/container.js","components/header.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","className","onSubmit","handleFormSubmit","value","name","onChange","handleInputChange","type","placeholder","EmployeeTable","scope","data-field","data-sortable","onClick","sortBy","state","filteredEmployees","map","employee","first","last","fullName","dob","formatDate","date","src","picture","thumbnail","alt","href","phone","email","age","nat","login","uuid","EmployeesContainer","search","employees","sortDirections","initialSortDirections","componentDidMount","fetch","then","res","json","setState","results","event","target","filterEmployees","toLowerCase","trim","preventDefault","key","primary","secondary","sortedEmployees","reverse","sort","a","b","localeCompare","input","filter","concat","includes","replace","Date","push","getDate","slice","getMonth","getFullYear","join","nationality","this","Component","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3af2088.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../style/searchbar.css\";\r\n\r\nconst SearchBar = (props) => {\r\n  // Setting the component's initial state\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-dark justify-content-center\">\r\n      <form className=\"form-inline m-2\" onSubmit={props.handleFormSubmit}>\r\n        <input\r\n          className=\"form-control\"\r\n          value={props.value}\r\n          name=\"search\"\r\n          onChange={props.handleInputChange}\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n        />\r\n      </form>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"../style/table.css\"\r\n\r\nconst EmployeeTable = (props) => {\r\n  return (\r\n    <table className=\"table table-striped table-dark table-sortable text-center\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Image</th>\r\n          <th scope=\"col\" data-field=\"name\" data-sortable=\"true\">\r\n            <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>\r\n              Name\r\n            </span>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <span onClick={() => props.sortBy(\"phone\")}>Phone</span>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <span onClick={() => props.sortBy(\"email\")}>Email</span>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <span onClick={() => props.sortBy(\"dob\", \"date\")}>DOB</span>\r\n          </th>\r\n         <th scope=\"col\">\r\n            <span onClick={() => props.sortBy(\"dob\",\"date\",\"age\")}>Age</span>\r\n          </th>\r\n          <th scope=\"col\">\r\n          <span onClick={() => props.sortBy(\"nat\")}>Nationality</span>\r\n        </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.state.filteredEmployees.map((employee) => {\r\n          const { first, last } = employee.name;\r\n          const fullName = `${first} ${last}`;\r\n\r\n          // Format date\r\n          const dob = props.formatDate(employee.dob.date);\r\n\r\n          return (\r\n            <tr key={employee.login.uuid}>\r\n              <td>\r\n                <img src={employee.picture.thumbnail} alt={fullName} />\r\n              </td>\r\n              <td className=\"align-middle\">{fullName}</td>\r\n              <td className=\"align-middle\">\r\n              <a href={`tel:+1${employee.phone}`}>{employee.phone}</a></td>\r\n              <td className=\"align-middle email\">\r\n                <a href={`mailto:${employee.email}`}>{employee.email}</a>\r\n              </td>\r\n              <td className=\"align-middle\">{dob}</td>\r\n              <td className=\"align-middle age\">\r\n              <a href={`mailto:${employee.dob.age}`}>{employee.dob.age}</a>\r\n            </td>\r\n              <td className=\"align-middle nationality\">\r\n              <a href={`mailto:${employee.nat}`}>{employee.nat}</a>\r\n            </td>\r\n            \r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default EmployeeTable;\r\n","import React, { Component } from \"react\";\r\nimport SearchBar from \"./search\";\r\nimport EmployeeTable from \"./table\";\r\n\r\nclass EmployeesContainer extends Component {\r\n  state = {\r\n    search: \"\",\r\n    employees: [],\r\n    filteredEmployees: [],\r\n    sortDirections: this.initialSortDirections,\r\n  };\r\n\r\n  get initialSortDirections() {\r\n    return {\r\n      name: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      dob: \"\",\r\n      age: \"\",\r\n      nationality: \"\",\r\n      \r\n    };\r\n  }\r\n\r\n  // added a fetch method to call the api\r\n  \r\n  componentDidMount = () => {\r\n    fetch(\"https://randomuser.me/api/?results=100&nat=us,dk,fr,gb,es,ch,ie,nl,br,au,tr,br\")\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        this.setState({ employees: json.results })\r\n        this.setState({ filteredEmployees: json.results })\r\n      })\r\n  };\r\n\r\n  // Update search state to filter by employee name\r\n  handleInputChange = (event) => {\r\n    const value = event.target.value;\r\n    this.setState({ search: value });\r\n    this.filterEmployees(value.toLowerCase().trim());\r\n  };\r\n\r\n  handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  // Sort with the key of specified object.\r\n  // If key has children, sort by primary child and optionally a secondary child. i.e. sort by last name, then first.\r\n  sortBy = (key, primary = 0, secondary = 0) => {\r\n    let sortedEmployees = this.state.filteredEmployees;\r\n    if (this.state.sortDirections[key]) {\r\n      this.setState({\r\n        filteredEmployees: sortedEmployees.reverse(),\r\n        sortDirections: {\r\n          ...this.initialSortDirections,\r\n          [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\" : \"asc\",\r\n        },\r\n      });\r\n    } else {\r\n      sortedEmployees = this.state.filteredEmployees.sort((a, b) => {\r\n        a = a[key];\r\n        b = b[key];\r\n\r\n        // If secondary comparison given and primary comparison is equal\r\n        // Example: Sorting by last name, if last names are equal, then sort that instance by first name instead.\r\n        if (primary) {\r\n          if (secondary && a[primary] === b[primary]) {\r\n            return a[secondary].localeCompare(b[secondary]);\r\n          }\r\n          return a[primary].localeCompare(b[primary]);\r\n        } else {\r\n          return a.localeCompare(b);\r\n        }\r\n      });\r\n\r\n      this.setState({\r\n        filteredEmployees: sortedEmployees,\r\n        sortDirections: {\r\n          ...this.initialSortDirections,\r\n          [key]: \"asc\",\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  filterEmployees = (input) => {\r\n    if (input) {\r\n      this.setState({\r\n        filteredEmployees: this.state.employees.filter((employee) => {\r\n          return (\r\n            employee.name.first\r\n              .toLowerCase()\r\n              .concat(\" \", employee.name.last.toLowerCase())\r\n              .includes(input) ||\r\n            employee.phone.includes(input) ||\r\n            employee.phone.replace(/[^\\w\\s]/gi, \"\").includes(input) ||\r\n            employee.email.includes(input) ||\r\n            employee.nat.includes(input) ||\r\n            this.formatDate(employee.dob.date).includes(input)\r\n          );\r\n        }),\r\n      });\r\n    } else {\r\n      this.setState({ filteredEmployees: this.state.employees });\r\n    }\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    date = new Date(date);\r\n    let dob = [];\r\n    dob.push((\"0\" + date.getDate()).slice(-2));\r\n    dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\r\n    dob.push(date.getFullYear());\r\n\r\n    // Join formatted date\r\n    return dob.join(\"-\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SearchBar\r\n          value={this.state.search}\r\n          handleInputChange={this.handleInputChange}\r\n          handleFormSubmit={this.handleFormSubmit}\r\n        />\r\n        <div className=\"container mt-4\">\r\n          <EmployeeTable\r\n            state={this.state}\r\n            sortBy={this.sortBy}\r\n            filterEmployees={this.filterEmployees}\r\n            formatDate={this.formatDate}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmployeesContainer;\r\n","import React from \"react\";\r\nimport \"../style/header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1 className=\"text-center\">Employee Directory</h1>\r\n      <p className=\"text-center\">\r\n        Type in the search bar to begin searching, click on headings to filter.\r\n      </p>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport EmployeesContainer from \"./components/container\";\r\nimport Header from \"./components/header\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n    <Header/>  \r\n    <EmployeesContainer/>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}